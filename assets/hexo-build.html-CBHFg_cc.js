import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,d as e}from"./app-DPgRXJ6X.js";const n={},h=e(`<p>❤️‍🔥这里只是记录了我在搭建博客时的一些经历，可能不够完善，希望对大家有所帮助。<!--more--> 主要是主题部分还没写，等有空余时间时，我想我一定会继续完善的。 现在我就像我头像旁边的图标一样，在摸鱼中🐟，嘻嘻！<br> 那么我们开始吧！👀</p><h1 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作"><span>准备工作</span></a></h1><p>安装 Hexo 之前要安装 <code>Git</code> 、<code>Node.js</code> 这两个工具</p><h2 id="安装-git" tabindex="-1"><a class="header-anchor" href="#安装-git"><span>安装 Git</span></a></h2><p>这里以 Windows 为例，因为这也是我第一次搭建博客，其它系统还不清楚。</p><p>点击 <a href="https://git-scm.com/download/win" target="_blank" rel="noopener noreferrer">git</a>去官网下载 ，如果网速不好，可以去 Github 参考 <a href="https://github.com/waylau/git-for-win" target="_blank" rel="noopener noreferrer">这个项目</a> 下载</p><h2 id="安装-node-js" tabindex="-1"><a class="header-anchor" href="#安装-node-js"><span>安装 Node.js</span></a></h2><p>可以去<a href="https://nodejs.org/en" target="_blank" rel="noopener noreferrer">官网</a>下载</p><h2 id="安装-hexo" tabindex="-1"><a class="header-anchor" href="#安装-hexo"><span>安装 Hexo</span></a></h2><p>安装好后，即可打开终端，使用 npm 完成 Hexo 的安装。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hexo-cli</span></span></code></pre></div><h1 id="搭建-hexo" tabindex="-1"><a class="header-anchor" href="#搭建-hexo"><span>搭建 Hexo</span></a></h1><p>完成以上工作后，便可以建造网站了。🍭</p><h2 id="搭建网站" tabindex="-1"><a class="header-anchor" href="#搭建网站"><span>搭建网站</span></a></h2><p>首先我们要选择一个自己喜欢的位置，建立博客根目录，可以直接新建文件夹，也可以用下面的命令，<code>[hexo_blog]</code> 可以自己修改。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [hexo_blog]</span></span></code></pre></div><p>然后对该文件夹进行 Hexo 初始化：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hexo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [hexo_blog]</span></span></code></pre></div><p>等待一段时间之后，便初始化成功了。</p><p>然后我们执行下面这两个命令：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [hexo_blog]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hexo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> g</span></span></code></pre></div><p>完成之后，便可以执行 <code>hexo s</code> 生成网址 <code>localhost:4000</code> 来预览博客初始样子。这里端口号可能会不同，注意提示信息即可。</p><p>在终端使用 <kbd>Ctrl</kbd> + <kbd>C</kbd> 结束命令。</p><h2 id="hexo-指令" tabindex="-1"><a class="header-anchor" href="#hexo-指令"><span>Hexo 指令</span></a></h2><p>这里我就只记录一些我自己经常用到的一些指令，一般为简写。</p><ol><li><code>hexo init .</code>：初始化博客</li><li><code>hexo new page &lt;name&gt;</code>：新建文件夹</li><li><code>hexo new &lt;title&gt;</code>：新建 <code>title.md</code>文件</li></ol><p>还有<strong>最常用</strong>的两个 hexo 三连 ：</p><ul><li>本地预览：<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></li><li>发布网站：<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></li></ul><blockquote><p>平常修改时一般只用 <code>hexo s</code> 来查看境况，若遇到啥问题时，可以使用 <code>hexo clean</code> 来清理网页缓存。</p></blockquote><p>想了解 hexo 更多常用命令可以跳转<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener noreferrer">官网</a>查看。</p><h1 id="部署-hexo" tabindex="-1"><a class="header-anchor" href="#部署-hexo"><span>部署 Hexo</span></a></h1><p>我之前部署到过 Netlify ，但是有时会访问不了，就不展开叙述了。下面我便讲一讲部署到 GitHub 的过程吧。</p><h2 id="创建仓库" tabindex="-1"><a class="header-anchor" href="#创建仓库"><span>创建仓库</span></a></h2><p>既然要部署到 GitHub 怎么可以没有一个仓库呢？这里我就默认搭建注册过账号了，如果没有，前往 <a href="https://github.com/" target="_blank" rel="noopener noreferrer">GitHub</a> 注册干嘛，愣着呀!</p><p>下面要用到的注释放在这里了，用户名：<code>userName</code>，注册邮箱：<code>userEmail</code>。</p><ol><li>新建一个公开仓库，<code>右上角搜索旁边的加号</code> -&gt; <code>New repository</code></li><li>填写信息：</li></ol><ul><li>仓库名 <code>Repository name</code> 格式为 <code>userName.github.io</code>，创建完成之后，记得复制仓库的 SSH。(HTTPS 同样可以使用，但我全是用的 SSH，没用过 HTTPS，也就不写了，望谅解。❤️‍🔥)</li><li>属性：<code>Public</code></li><li>直接创建 <code>Create repository</code> 即可</li></ul><p>待我们创建完仓库之后</p><h2 id="相关配置" tabindex="-1"><a class="header-anchor" href="#相关配置"><span>相关配置</span></a></h2><p>右键博客根目录，点击 <code>Git Bash</code> ，接下来指令我就都在这里执行了</p><h3 id="安装插件" tabindex="-1"><a class="header-anchor" href="#安装插件"><span>安装插件</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hexo-deployer-git</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --save</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hexo-server</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --save</span></span></code></pre></div><h3 id="配置-git" tabindex="-1"><a class="header-anchor" href="#配置-git"><span>配置 Git</span></a></h3><p>在 <code>Git Bash</code> 中执行以下两条命令配置你的用户名和邮箱，这里建议用户名 <code>userName</code> 和邮箱 <code>userEmail</code> 与你的 GitHub 用户名和邮箱保持一致。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user.name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;userName&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user.email</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;userEmail&quot;</span></span></code></pre></div><h3 id="配置密钥" tabindex="-1"><a class="header-anchor" href="#配置密钥"><span>配置密钥</span></a></h3><p>依旧是在 <code>Git Bash</code> 下执行指令</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ssh-keygen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rsa</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;userEmail&quot;</span></span></code></pre></div><p>接着会出现 <code>Enter file in which to save the key</code>，回车即可。 之后会出现让我们设置密码的情况，<code>Enter passphrase (empty for no passphrase):</code> ，若直接回车，则是无密码。接着再输一遍密钥。</p><p>注意第二遍输入密码之后会在过程中出现 <code>Your public key has been saved in </code> 字样，找到后面跟着的文件路径，用记事本打开 <code>id_rsa.pub</code>，全选复制即可。</p><p>💡注意：<code>id_rsa</code> 是你这台电脑的私人秘钥，不能给别人看，而 <code>id_rsa.pub </code>是公共秘钥，无所谓。这个公钥的用处就是，当你链接GitHub自己的账户时，会你的私钥，匹配成功，才能通过git上传你的文件到GitHub上。</p><p>接着便是把公钥内容放到 GitHub 上。步骤如下</p><p>右上角头像 -&gt; <code>Settings</code> -&gt; 点击左边 <code>SSH and GPG keys</code> -&gt; 点击 <code>New SSH key</code> .</p><p>其中 <code>Title</code> 随便填写，<code>Key</code> 填写前面复制的 <code>id_rsa.pub</code> 内容。</p><p>接下来在 <code>Git Bash</code> 中执行以下指令：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -T</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git@github.com</span></span></code></pre></div><p>若之前设置了密钥，要输入密码。当出现 <code> You&#39;ve successfully authenticated</code> 字样时，就表示你已经成功了。</p><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h3><p>那麽好，完成以上操作后，接下来便是对于 Hexo 根目录下 <code>_config.yml</code> 配置文件的相关配置了。</p><p>打开配置文件 <code>_config.yml</code> ，划到代码最后，修改 <code>deploy</code> 的内容。</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">deploy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">git</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">SSH</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  branch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>repository: SSH</code> 部分的 SSH 便是创建初始公开仓库时的那个，形式如下：<code>git@github.com:userName/userName.github.io.git</code>。</p><p>好，那么好，我们已经快成功了，接下来便是 Hexo 三连</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hexo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hexo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> g</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hexo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> d</span></span></code></pre></div><p>接下来，打开 Github 的博客仓库，便会看到文件已经上传成功，此时打开 <code>https://userName.github.io</code> 便可以看到 Hexo 博客了。</p><p>这里我建议到 <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener noreferrer">Hexo官方</a> 去查看相关文档，那里讲的很详细了。</p><h1 id="hexo-主题" tabindex="-1"><a class="header-anchor" href="#hexo-主题"><span>Hexo 主题</span></a></h1><p>主题的内容我以后在写吧，这里埋下一个大坑🕳️👀</p><p>但是后面自动部署大家还是要看的</p><h1 id="自动部署" tabindex="-1"><a class="header-anchor" href="#自动部署"><span>自动部署</span></a></h1><p>这里我们使用Github Action来完成自动部署。下面是详细步骤。</p><h2 id="创建-token" tabindex="-1"><a class="header-anchor" href="#创建-token"><span>创建 Token</span></a></h2><p>首先要创建 <code>token</code> ,点击<a href="https://github.com/settings/tokens/new" target="_blank" rel="noopener noreferrer">这里</a>跳转。</p><p>创建的 token 名称(Note) 随意，有效期(Expiration) 随便，这里我选择(No expiration)，节省以后调整的麻烦。勾选 <code>repo</code> 项 和 <code>workflows</code> 项。点击<code>Generate token</code>创建即可。</p><p>！注意，要记录下来生成的token，一旦忘记，就只能重新配置了。</p><h2 id="创建私有仓库" tabindex="-1"><a class="header-anchor" href="#创建私有仓库"><span>创建私有仓库</span></a></h2><p>创建完 token 后，我们接着创建用来存放博客源码的<strong>私有</strong>仓库。<code>Repository name</code> 随便，这里以 <code>BlogScoure</code> 为例，属性为 <code>Private</code>.</p><h2 id="配置-github-action" tabindex="-1"><a class="header-anchor" href="#配置-github-action"><span>配置 Github Action</span></a></h2><p>接下来便是对于Github Action 的配置</p><p>在博客根目录下 <code>.github</code> 文件下创建 <code>workflows</code> 文件夹，再 <code>workflows</code> 内创建 <code>deploy.yml</code> 文件，用于配置自动部署指令。在 <code>deploy.yml</code> 里面输入如下代码。</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">自动部署</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    branches</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  release</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    types</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">published</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">jobs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  deploy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    runs-on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ubuntu-latest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    steps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">检查分支</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">actions/checkout@v2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">安装 Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">actions/setup-node@v1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          node-version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;16.x&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">安装 Hexo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          export TZ=&#39;Asia/Shanghai&#39;  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          npm install hexo-cli -g  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">缓存 Hexo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cache-npm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">actions/cache@v3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          cache-name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cache-node-modules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">node_modules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${{ runner.os }}-build-\${{ env.cache-name }}-\${{ hashFiles(&#39;**/package-lock.json&#39;) }}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          restore-keys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            \${{ runner.os }}-build-\${{ env.cache-name }}-  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            \${{ runner.os }}-build-  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            \${{ runner.os }}-  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">安装依赖</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${{ steps.cache-npm.outputs.cache-hit != &#39;true&#39; }}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          npm install --save  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">生成静态文件</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          hexo clean  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          hexo generate  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">部署到Github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">JamesIves/github-pages-deploy-action@v4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          token</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          repository-name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          branch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          folder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">public</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          commit-message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${{ github.event.head_commit.message }}&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着要填写yml文件最后一部分 <code>部署到Github</code> 中的内容， <code>token</code> 为第一步中创建的那个，<code>repository-name</code> 为博客仓库 <code>Noachlu/Noachlu.github.io</code> (填写自己的)。</p><p>代码部分完成后，要保护密钥安全性，我们可以打开创建的私有仓库<code>BlogScoure</code> ，点击<code>Settings</code>-&gt; <code>Secrets and variables</code> -&gt; <code>Actions</code> -&gt; <code>New repository secret</code> ，名称随便，但要全部大写字母和 <code>_</code> 字符。内容填写第一步创建的 <code>token</code> ，然后 Add Secret 即可。</p><h2 id="重新设置远程仓库和分支" tabindex="-1"><a class="header-anchor" href="#重新设置远程仓库和分支"><span>重新设置远程仓库和分支</span></a></h2><h3 id="删除-git" tabindex="-1"><a class="header-anchor" href="#删除-git"><span>删除 .git</span></a></h3><p>首先删除 <code>博客根目录/themes/xxxx/.git</code> ，删除 <code>.git</code> 文件夹，要注意该文件夹是隐藏的。</p><p>之后在根目录运行以下指令</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [私有仓库的SSH]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span></code></pre></div><h3 id="添加屏蔽项" tabindex="-1"><a class="header-anchor" href="#添加屏蔽项"><span>添加屏蔽项</span></a></h3><p>将指定内容不上传到 github 上。这样可以减少需要提交的文件量和加快提交速度。 在 <code>博客根目录/.gitignore</code> 文件中替换以下内容：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>.DS_Store  </span></span>
<span class="line"><span>Thumbs.db  </span></span>
<span class="line"><span>db.json  </span></span>
<span class="line"><span>*.log  </span></span>
<span class="line"><span>node_modules/  </span></span>
<span class="line"><span>public/  </span></span>
<span class="line"><span>.deploy*/  </span></span>
<span class="line"><span>.deploy_git*/  </span></span>
<span class="line"><span>.idea  </span></span>
<span class="line"><span>themes/xxxx/.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后一行 xxxx 换成自己使用的主题</p><h3 id="提交到github" tabindex="-1"><a class="header-anchor" href="#提交到github"><span>提交到Github</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;First update&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span></code></pre></div><p>以后都使用这三个代码进行提交，其中 <code>First update</code> 按照自己情况进行修改。</p><p>若嫌麻烦，可以在博客根目录下创建 <code>push.bat</code> 脚本，在里面输入以下内容：</p><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" data-title="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> off</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">git add .</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">git commit -m </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;First update&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">git push origin main</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">pause</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用时双击脚本即可自动执行命令。</p><h3 id="查看部署情况" tabindex="-1"><a class="header-anchor" href="#查看部署情况"><span>查看部署情况</span></a></h3><p>打开私有仓库，点击 <code>Action</code> -&gt; <code>刚刚提交的commit</code> -&gt; <code>deploy</code> ，查看情况。若全是√，则部署成功。</p>`,100),l=[h];function t(p,k){return a(),i("div",null,l)}const o=s(n,[["render",t],["__file","hexo-build.html.vue"]]),c=JSON.parse(`{"path":"/posts/lifeNotes/hexo-build.html","title":"Hexo搭建过程","lang":"zh-CN","frontmatter":{"title":"Hexo搭建过程","author":"Noachlu","date":"2024-02-06T21:53:17.000Z","mathjax":false,"abbrlink":"c5ec91d2","description":"❤️‍🔥这里只是记录了我在搭建博客时的一些经历，可能不够完善，希望对大家有所帮助。 主要是主题部分还没写，等有空余时间时，我想我一定会继续完善的。 现在我就像我头像旁边的图标一样，在摸鱼中🐟，嘻嘻！ 那么我们开始吧！👀 准备工作 安装 Hexo 之前要安装 Git 、Node.js 这两个工具 安装 Git 这里以 Windows 为例，因为这也...","head":[["meta",{"property":"og:url","content":"https://noachlu.github.io/posts/lifeNotes/hexo-build.html"}],["meta",{"property":"og:site_name","content":"Noachlu's Blog"}],["meta",{"property":"og:title","content":"Hexo搭建过程"}],["meta",{"property":"og:description","content":"❤️‍🔥这里只是记录了我在搭建博客时的一些经历，可能不够完善，希望对大家有所帮助。 主要是主题部分还没写，等有空余时间时，我想我一定会继续完善的。 现在我就像我头像旁边的图标一样，在摸鱼中🐟，嘻嘻！ 那么我们开始吧！👀 准备工作 安装 Hexo 之前要安装 Git 、Node.js 这两个工具 安装 Git 这里以 Windows 为例，因为这也..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-26T17:25:45.000Z"}],["meta",{"property":"article:author","content":"Noachlu"}],["meta",{"property":"article:published_time","content":"2024-02-06T21:53:17.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-26T17:25:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Hexo搭建过程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-06T21:53:17.000Z\\",\\"dateModified\\":\\"2024-07-26T17:25:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Noachlu\\"}]}"]]},"headers":[{"level":2,"title":"安装 Git","slug":"安装-git","link":"#安装-git","children":[]},{"level":2,"title":"安装 Node.js","slug":"安装-node-js","link":"#安装-node-js","children":[]},{"level":2,"title":"安装 Hexo","slug":"安装-hexo","link":"#安装-hexo","children":[]},{"level":2,"title":"搭建网站","slug":"搭建网站","link":"#搭建网站","children":[]},{"level":2,"title":"Hexo 指令","slug":"hexo-指令","link":"#hexo-指令","children":[]},{"level":2,"title":"创建仓库","slug":"创建仓库","link":"#创建仓库","children":[]},{"level":2,"title":"相关配置","slug":"相关配置","link":"#相关配置","children":[{"level":3,"title":"安装插件","slug":"安装插件","link":"#安装插件","children":[]},{"level":3,"title":"配置 Git","slug":"配置-git","link":"#配置-git","children":[]},{"level":3,"title":"配置密钥","slug":"配置密钥","link":"#配置密钥","children":[]},{"level":3,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]}]},{"level":2,"title":"创建 Token","slug":"创建-token","link":"#创建-token","children":[]},{"level":2,"title":"创建私有仓库","slug":"创建私有仓库","link":"#创建私有仓库","children":[]},{"level":2,"title":"配置 Github Action","slug":"配置-github-action","link":"#配置-github-action","children":[]},{"level":2,"title":"重新设置远程仓库和分支","slug":"重新设置远程仓库和分支","link":"#重新设置远程仓库和分支","children":[{"level":3,"title":"删除 .git","slug":"删除-git","link":"#删除-git","children":[]},{"level":3,"title":"添加屏蔽项","slug":"添加屏蔽项","link":"#添加屏蔽项","children":[]},{"level":3,"title":"提交到Github","slug":"提交到github","link":"#提交到github","children":[]},{"level":3,"title":"查看部署情况","slug":"查看部署情况","link":"#查看部署情况","children":[]}]}],"git":{"createdTime":1721997279000,"updatedTime":1722014745000,"contributors":[{"name":"noachlu","email":"noachlu@outlook.com","commits":2}]},"readingTime":{"minutes":7.21,"words":2163},"filePathRelative":"posts/lifeNotes/hexo-build.md","localizedDate":"2024年2月6日","excerpt":"<p>❤️‍🔥这里只是记录了我在搭建博客时的一些经历，可能不够完善，希望对大家有所帮助。<!--more-->\\n主要是主题部分还没写，等有空余时间时，我想我一定会继续完善的。\\n现在我就像我头像旁边的图标一样，在摸鱼中🐟，嘻嘻！<br>\\n那么我们开始吧！👀</p>\\n<h1>准备工作</h1>\\n<p>安装 Hexo 之前要安装 <code>Git</code> 、<code>Node.js</code> 这两个工具</p>\\n<h2>安装 Git</h2>\\n<p>这里以 Windows 为例，因为这也是我第一次搭建博客，其它系统还不清楚。</p>\\n<p>点击 <a href=\\"https://git-scm.com/download/win\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">git</a>去官网下载 ，如果网速不好，可以去 Github 参考 <a href=\\"https://github.com/waylau/git-for-win\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">这个项目</a> 下载</p>","autoDesc":true}`);export{o as comp,c as data};
