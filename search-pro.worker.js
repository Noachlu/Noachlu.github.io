const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":68,\"nextId\":68,\"documentIds\":{\"0\":\"1\",\"1\":\"1#近期热门文章\",\"2\":\"1#关于我\",\"3\":\"1#联系我\",\"4\":\"2\",\"5\":\"3\",\"6\":\"4\",\"7\":\"4#标题-2\",\"8\":\"4#标题-3\",\"9\":\"4#标题-4\",\"10\":\"4#标题-5\",\"11\":\"4@0\",\"12\":\"5\",\"13\":\"5#标题-2\",\"14\":\"5#标题-3\",\"15\":\"5@0\",\"16\":\"6\",\"17\":\"7\",\"18\":\"8\",\"19\":\"8#标题-2\",\"20\":\"8#标题-3\",\"21\":\"8#标题-4\",\"22\":\"8#标题-5\",\"23\":\"9\",\"24\":\"9#标题-2\",\"25\":\"9#标题-3\",\"26\":\"9#标题-4\",\"27\":\"9#标题-5\",\"28\":\"9@0\",\"29\":\"10\",\"30\":\"11\",\"31\":\"11#提取文件名\",\"32\":\"11#修改时间代码\",\"33\":\"12\",\"34\":\"12#安装-git\",\"35\":\"12#安装-node-js\",\"36\":\"12#安装-hexo\",\"37\":\"12#搭建网站\",\"38\":\"12#hexo-指令\",\"39\":\"12#创建仓库\",\"40\":\"12#相关配置\",\"41\":\"12#安装插件\",\"42\":\"12#配置-git\",\"43\":\"12#配置密钥\",\"44\":\"12#配置文件\",\"45\":\"12#创建-token\",\"46\":\"12#创建私有仓库\",\"47\":\"12#配置-github-action\",\"48\":\"12#重新设置远程仓库和分支\",\"49\":\"12#删除-git\",\"50\":\"12#添加屏蔽项\",\"51\":\"12#提交到github\",\"52\":\"12#查看部署情况\",\"53\":\"13\",\"54\":\"14\",\"55\":\"15\",\"56\":\"15#标题-2\",\"57\":\"15#标题-3\",\"58\":\"15@0\",\"59\":\"16\",\"60\":\"16#标题-2\",\"61\":\"16#标题-3\",\"62\":\"16@0\",\"63\":\"17\",\"64\":\"17#标题-2\",\"65\":\"17#标题-3\",\"66\":\"17@0\",\"67\":\"18\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,14],\"1\":[1],\"2\":[1,5],\"3\":[1,12],\"4\":[1],\"5\":[1,8],\"6\":[2],\"7\":[2,2],\"8\":[2,2],\"9\":[2,1],\"10\":[2,1],\"11\":[null,null,3],\"12\":[2],\"13\":[2,2],\"14\":[2,2],\"15\":[null,null,3],\"16\":[1],\"17\":[1,8],\"18\":[2],\"19\":[2,2],\"20\":[2,2],\"21\":[2,1],\"22\":[2,1],\"23\":[2],\"24\":[2,2],\"25\":[2,2],\"26\":[2,1],\"27\":[2,1],\"28\":[null,null,3],\"29\":[1],\"30\":[1,11],\"31\":[1,13],\"32\":[1,230],\"33\":[1,18],\"34\":[2,13],\"35\":[3,1],\"36\":[2,14],\"37\":[1,32],\"38\":[2,36],\"39\":[1,41],\"40\":[1,5],\"41\":[1,8],\"42\":[2,19],\"43\":[1,88],\"44\":[1,56],\"45\":[2,26],\"46\":[1,13],\"47\":[3,126],\"48\":[1],\"49\":[2,17],\"50\":[1,24],\"51\":[1,22],\"52\":[1,10],\"53\":[1,6],\"54\":[1,8],\"55\":[2],\"56\":[2,2],\"57\":[2,2],\"58\":[null,null,3],\"59\":[2],\"60\":[2,2],\"61\":[2,2],\"62\":[null,null,3],\"63\":[2,4],\"64\":[2,2],\"65\":[2,2],\"66\":[null,null,3],\"67\":[1,3]},\"averageFieldLength\":[1.5948490527610486,16.452900221647027,0.6277510751328105],\"storedFields\":{\"0\":{\"h\":\"欢迎访问\",\"t\":[\"欢迎来到我的个人博客，这是一个关于技术、生活和学习的地方。在这里，你将发现各种有趣的内容，包括：\",\"技术分享：最新的编程技术、开发工具和项目经验。\",\"生活随笔：日常生活中的点滴记录和思考。\",\"学习笔记：在学习过程中积累的知识和心得。\"]},\"1\":{\"h\":\"近期热门文章\"},\"2\":{\"h\":\"关于我\",\"t\":[\"我是 Noachlu，一名热爱编程和分享知识的开发者。希望通过这个博客与你一起成长和进步。\"]},\"3\":{\"h\":\"联系我\",\"t\":[\"如果你对我的博客内容有任何意见或建议，欢迎通过以下方式联系我：\",\"邮箱：noachlu@outlook.com\",\"GitHub：https://github.com/noachlu\",\"感谢你的访问，期待与你在博客中交流和分享更多有趣的内容！\"]},\"4\":{\"h\":\"文章\"},\"5\":{\"h\":\"Java知识\",\"t\":[\"对于该目录下面的 md 文章的描述，或者一下其它信息\",\"可以用 <Catalog /> 来显示下面有的文章的标题目录\"]},\"6\":{\"h\":\"JavaSE 笔记\"},\"7\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"8\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"9\":{\"h\":\"标题 4\",\"t\":[\"发生的发送发顺丰\"]},\"10\":{\"h\":\"标题 5\",\"t\":[\"飞洒发生飞洒发生发生发生发射点发\"]},\"11\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"12\":{\"h\":\"MySQL 笔记\"},\"13\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"14\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"15\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"16\":{\"h\":\"框架专栏\"},\"17\":{\"h\":\"Java知识\",\"t\":[\"对于该目录下面的 md 文章的描述，或者一下其它信息\",\"可以用 <Catalog /> 来显示下面有的文章的标题目录\"]},\"18\":{\"h\":\"JavaSE 面经\"},\"19\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"20\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"21\":{\"h\":\"标题 4\",\"t\":[\"发生的发送发顺丰\"]},\"22\":{\"h\":\"标题 5\",\"t\":[\"飞洒发生飞洒发生发生发生发射点发\"]},\"23\":{\"h\":\"Spring 面经\"},\"24\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"25\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"26\":{\"h\":\"标题 4\",\"t\":[\"发生的发送发顺丰\"]},\"27\":{\"h\":\"标题 5\",\"t\":[\"飞洒发生飞洒发生发生发生发射点发\"]},\"28\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"29\":{\"h\":\"日常随笔\"},\"30\":{\"h\":\"音乐时间戳修改\",\"t\":[\"处理汽车车载U盘音乐歌词显示问题\",\"注：前面的两个版本功能不太齐全，要保证文件夹中只有 .lrc 文件。\",\"如果想体验完整版可以直接跳转到最后两个版本。\",\"music1 文件是处理前的文件夹，music2 是处理后的文件夹\"]},\"31\":{\"h\":\"提取文件名\",\"t\":[\"首先在 music1 文件夹中，新建 music.txt 输入下面代码，然后另存为 music.bat\",\"DIR *.* /B >LIST.TXT\"]},\"32\":{\"h\":\"修改时间代码\",\"t\":[\"只需修改代码中处理文件前后的两个 文件夹路径 ，和更改 第9行 的 歌曲名 即可。\",\"import os def check_and_delete_digit(line): if len(line) >= 10 and line[9].isdigit(): line = line[:9] + line[10:] else: pass return line input_filename = \\\"A.I.N.Y..lrc\\\" # 歌曲名 output_filename = input_filename # 读取文件 file_path = \\\"D:/桌面/music1/\\\" + input_filename # 文件名 output_lines = [] with open(file_path, encoding=\\\"utf8\\\") as file: for line in file: line = line.strip() line = check_and_delete_digit(line) output_lines.append(line) # 将处理后的内容写入新文件 output_file_path = os.path.join(\\\"D:/桌面/music2/\\\", output_filename) with open(output_file_path, \\\"w\\\", encoding=\\\"utf8\\\") as output_file: output_file.write(\\\"\\\\n\\\".join(output_lines)) print(input_filename + \\\"文件处理完成！\\\")\",\"该版本只要修改 input_folder_path 和 output_folder_path 两个变量即可\",\"import os def check_and_delete_digit(line): if len(line) >= 10 and line[9].isdigit(): line = line[:9] + line[10:] else: pass return line def delete_timecode(lines): start_index = -1 for i, line in enumerate(lines): if \\\"[00:00.00]\\\" in line: start_index = i break if start_index != -1: return lines[start_index:] else: return lines input_folder_path = \\\"D:\\\\桌面\\\\music1\\\" output_folder_path = \\\"D:\\\\桌面\\\\music2\\\" for filename in os.listdir(input_folder_path): file_path = os.path.join(input_folder_path, filename) output_lines = [] with open(file_path, \\\"r\\\", encoding=\\\"utf8\\\") as file: for line in file: line = line.strip() line = check_and_delete_digit(line) output_lines.append(line) output_lines = delete_timecode(output_lines) output_file_path = os.path.join(output_folder_path, filename) with open(output_file_path, \\\"w\\\", encoding=\\\"utf8\\\") as output_file: output_file.write(\\\"\\\\n\\\".join(output_lines)) print(\\\"文件 {} 已处理完成！\\\".format(filename)) print(\\\"所有文件已处理完成！\\\")\",\"使用的是 python 自带的图形化界面 tkinter，无需其它安装操作，拿来即用。添加了如下功能：\",\"只处理文件夹中后缀为\\\".lrc\\\"的文件\",\"import os import re import tkinter as tk from tkinter import filedialog, messagebox # 功能 def replace_timestamps(input_file, output_file): with open(input_file, \\\"r\\\", encoding=\\\"utf8\\\") as file: text = file.read() modified_text = re.sub(r'(\\\\[\\\\d{2}:\\\\d{2}\\\\.\\\\d)\\\\]', lambda x: x.group(1) + '0]', text) with open(output_file, \\\"w\\\", encoding=\\\"utf8\\\") as file: file.write(modified_text) def check_and_delete_digit(line): if len(line) >= 10 and line[9].isdigit(): line = line[:9] + line[10:] else: pass return line def delete_timecode(lines): start_index = -1 for i, line in enumerate(lines): if \\\"[00:00.\\\" in line: start_index = i break if start_index != -1: lines = [re.sub(r'^.*(\\\\[00:00\\\\.\\\\d+\\\\])', r'\\\\1', line) if \\\"[00:00.\\\" in line else line for line in lines[start_index:]] return lines # 功能汇总 def process_files(): input_folder_path = input_folder_path_entry.get() output_folder_path = output_folder_path_entry.get() for filename in os.listdir(input_folder_path): if filename.endswith('.lrc'): file_path = os.path.join(input_folder_path, filename) output_lines = [] replace_timestamps(file_path, file_path) # 先替换时间戳 with open(file_path, \\\"r\\\", encoding=\\\"utf8\\\") as file: for line in file: line = line.strip() line = check_and_delete_digit(line) output_lines.append(line) output_lines = delete_timecode(output_lines) output_file_path = os.path.join(output_folder_path, filename) with open(output_file_path, \\\"w\\\", encoding=\\\"utf8\\\") as output_file: output_file.write(\\\"\\\\n\\\".join(output_lines)) print(\\\"文件 {} 已处理完成！\\\".format(filename)) messagebox.showinfo(\\\"处理完成\\\", \\\"所有文件已处理完成！\\\") root.destroy() # 图形界面 def browse_input_folder(): folder_path = filedialog.askdirectory() input_folder_path_entry.delete(0, tk.END) input_folder_path_entry.insert(0, folder_path) def browse_output_folder(): folder_path = filedialog.askdirectory() output_folder_path_entry.delete(0, tk.END) output_folder_path_entry.insert(0, folder_path) # 主界面 root = tk.Tk() root.title(\\\"文件处理程序\\\") input_folder_label = tk.Label(root, text=\\\"输入文件夹路径:\\\") input_folder_label.grid(row=0, column=0, padx=5, pady=5) input_folder_path_entry = tk.Entry(root, width=50) input_folder_path_entry.grid(row=0, column=1, padx=5, pady=5) browse_input_button = tk.Button(root, text=\\\"浏览\\\", command=browse_input_folder) browse_input_button.grid(row=0, column=2, padx=5, pady=5) output_folder_label = tk.Label(root, text=\\\"输出文件夹路径:\\\") output_folder_label.grid(row=1, column=0, padx=5, pady=5) output_folder_path_entry = tk.Entry(root, width=50) output_folder_path_entry.grid(row=1, column=1, padx=5, pady=5) browse_output_button = tk.Button(root, text=\\\"浏览\\\", command=browse_output_folder) browse_output_button.grid(row=1, column=2, padx=5, pady=5) process_button = tk.Button(root, text=\\\"处理文件\\\", command=process_files) process_button.grid(row=2, column=1, padx=5, pady=5) root.mainloop()\",\"对处理界面进行了美化，个人感觉 升级版 的界面太过模糊，于是使用了 PyQt5 进行了美化，使界面更加清除。还增加了如下功能。\",\"添加计数标签到布局中，显示处理完成的文件数\",\"首先要先安装 PyQt5 框架，使用如下命令：\",\"pip install PyQt5 -i https://pypi.douban.com/simple\",\"接下来便是完整的代码：\",\"import os import re from PyQt5.QtGui import QIcon from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QHBoxLayout, QPushButton, QLabel, QLineEdit, QFileDialog, QMessageBox class FileProcessor(QWidget): # 界面 def __init__(self): super().__init__() self.initUI() self.file_count = 0 def initUI(self): self.input_folder_path_entry = QLineEdit() self.output_folder_path_entry = QLineEdit() self.select_input_button = QPushButton(\\\"选择输入文件夹\\\") self.select_input_button.clicked.connect(self.selectInputFolder) self.select_output_button = QPushButton(\\\"选择输出文件夹\\\") self.select_output_button.clicked.connect(self.selectOutputFolder) self.process_button = QPushButton(\\\"开始处理\\\") self.process_button.clicked.connect(self.processFiles) self.count_label = QLabel(\\\"已完成文件数量: 0\\\") vbox = QVBoxLayout() hbox1 = QHBoxLayout() hbox1.addWidget(QLabel(\\\"输入文件夹路径: \\\")) hbox1.addWidget(self.input_folder_path_entry) hbox1.addWidget(self.select_input_button) vbox.addLayout(hbox1) hbox2 = QHBoxLayout() hbox2.addWidget(QLabel(\\\"输出文件夹路径: \\\")) hbox2.addWidget(self.output_folder_path_entry) hbox2.addWidget(self.select_output_button) vbox.addLayout(hbox2) vbox.addWidget(self.process_button) vbox.addWidget(self.count_label) # 添加计数标签到布局 self.setLayout(vbox) self.setWindowTitle('文件处理工具') self.show() def selectInputFolder(self): folder_path = str(QFileDialog.getExistingDirectory(self, \\\"选择输入文件夹\\\")) self.input_folder_path_entry.setText(folder_path) def selectOutputFolder(self): folder_path = str(QFileDialog.getExistingDirectory(self, \\\"选择输出文件夹\\\")) self.output_folder_path_entry.setText(folder_path) # 功能 def replaceTimestamps(self, input_file, output_file): with open(input_file, \\\"r\\\", encoding=\\\"utf8\\\") as file: text = file.read() modified_text = re.sub(r'(\\\\[\\\\d{2}:\\\\d{2}\\\\.\\\\d)\\\\]', lambda x: x.group(1) + '0]', text) with open(output_file, \\\"w\\\", encoding=\\\"utf8\\\") as file: file.write(modified_text) def checkAndDeleteDigit(self, line): if len(line) >= 10 and line[9].isdigit(): line = line[:9] + line[10:] else: pass return line def deleteTimecode(self, lines): start_index = -1 for i, line in enumerate(lines): if \\\"[00:00.\\\" in line: start_index = i break if start_index != -1: lines = [re.sub(r'^.*(\\\\[00:00\\\\.\\\\d+\\\\])', r'\\\\1', line) if \\\"[00:00.\\\" in line else line for line in lines[start_index:]] return lines def processFiles(self): input_folder_path = self.input_folder_path_entry.text() output_folder_path = self.output_folder_path_entry.text() for filename in os.listdir(input_folder_path): if filename.endswith('.lrc'): file_path = os.path.join(input_folder_path, filename) output_lines = [] self.replaceTimestamps(file_path, file_path) with open(file_path, \\\"r\\\", encoding=\\\"utf8\\\") as file: for line in file: line = line.strip() line = self.checkAndDeleteDigit(line) output_lines.append(line) output_lines = self.deleteTimecode(output_lines) output_file_path = os.path.join(output_folder_path, filename) with open(output_file_path, \\\"w\\\", encoding=\\\"utf8\\\") as output_file: output_file.write(\\\"\\\\n\\\".join(output_lines)) print(\\\"文件{} 已处理完成！\\\".format(filename)) self.file_count += 1 self.count_label.setText(\\\"已完成文件数量: {}\\\".format(self.file_count)) self.process_button.setText(\\\"处理完成，所有文件已处理完成！\\\") self.process_button.setDisabled(True) if __name__ == '__main__': import sys app = QApplication(sys.argv) ex = FileProcessor() sys.exit(app.exec_())\"]},\"33\":{\"h\":\"Hexo搭建过程\",\"t\":[\"❤️‍🔥这里只是记录了我在搭建博客时的一些经历，可能不够完善，希望对大家有所帮助。 主要是主题部分还没写，等有空余时间时，我想我一定会继续完善的。 现在我就像我头像旁边的图标一样，在摸鱼中🐟，嘻嘻！ 那么我们开始吧！👀\",\"安装 Hexo 之前要安装 Git 、Node.js 这两个工具\"]},\"34\":{\"h\":\"安装 Git\",\"t\":[\"这里以 Windows 为例，因为这也是我第一次搭建博客，其它系统还不清楚。\",\"点击 git去官网下载 ，如果网速不好，可以去 Github 参考 这个项目 下载\"]},\"35\":{\"h\":\"安装 Node.js\",\"t\":[\"可以去官网下载\"]},\"36\":{\"h\":\"安装 Hexo\",\"t\":[\"安装好后，即可打开终端，使用 npm 完成 Hexo 的安装。\",\"npm install -g hexo-cli\",\"完成以上工作后，便可以建造网站了。🍭\"]},\"37\":{\"h\":\"搭建网站\",\"t\":[\"首先我们要选择一个自己喜欢的位置，建立博客根目录，可以直接新建文件夹，也可以用下面的命令，[hexo_blog] 可以自己修改。\",\"mkdir [hexo_blog]\",\"然后对该文件夹进行 Hexo 初始化：\",\"hexo init [hexo_blog]\",\"等待一段时间之后，便初始化成功了。\",\"然后我们执行下面这两个命令：\",\"cd [hexo_blog] hexo g\",\"完成之后，便可以执行 hexo s 生成网址 localhost:4000 来预览博客初始样子。这里端口号可能会不同，注意提示信息即可。\",\"在终端使用 Ctrl + C 结束命令。\"]},\"38\":{\"h\":\"Hexo 指令\",\"t\":[\"这里我就只记录一些我自己经常用到的一些指令，一般为简写。\",\"hexo init .：初始化博客\",\"hexo new page <name>：新建文件夹\",\"hexo new <title>：新建 title.md文件\",\"还有最常用的两个 hexo 三连 ：\",\"本地预览：hexo clean && hexo g && hexo s\",\"发布网站：hexo clean && hexo g && hexo d\",\"平常修改时一般只用 hexo s 来查看境况，若遇到啥问题时，可以使用 hexo clean 来清理网页缓存。\",\"想了解 hexo 更多常用命令可以跳转官网查看。\",\"我之前部署到过 Netlify ，但是有时会访问不了，就不展开叙述了。下面我便讲一讲部署到 GitHub 的过程吧。\"]},\"39\":{\"h\":\"创建仓库\",\"t\":[\"既然要部署到 GitHub 怎么可以没有一个仓库呢？这里我就默认搭建注册过账号了，如果没有，前往 GitHub 注册干嘛，愣着呀!\",\"下面要用到的注释放在这里了，用户名：userName，注册邮箱：userEmail。\",\"新建一个公开仓库，右上角搜索旁边的加号 -> New repository\",\"填写信息：\",\"仓库名 Repository name 格式为 userName.github.io，创建完成之后，记得复制仓库的 SSH。(HTTPS 同样可以使用，但我全是用的 SSH，没用过 HTTPS，也就不写了，望谅解。❤️‍🔥)\",\"属性：Public\",\"直接创建 Create repository 即可\",\"待我们创建完仓库之后\"]},\"40\":{\"h\":\"相关配置\",\"t\":[\"右键博客根目录，点击 Git Bash ，接下来指令我就都在这里执行了\"]},\"41\":{\"h\":\"安装插件\",\"t\":[\"$ npm install hexo-deployer-git --save $ npm install hexo-server --save\"]},\"42\":{\"h\":\"配置 Git\",\"t\":[\"在 Git Bash 中执行以下两条命令配置你的用户名和邮箱，这里建议用户名 userName 和邮箱 userEmail 与你的 GitHub 用户名和邮箱保持一致。\",\"$ git config --global user.name \\\"userName\\\" $ git config --global user.email \\\"userEmail\\\"\"]},\"43\":{\"h\":\"配置密钥\",\"t\":[\"依旧是在 Git Bash 下执行指令\",\"$ ssh-keygen -t rsa -C \\\"userEmail\\\"\",\"接着会出现 Enter file in which to save the key，回车即可。 之后会出现让我们设置密码的情况，Enter passphrase (empty for no passphrase): ，若直接回车，则是无密码。接着再输一遍密钥。\",\"注意第二遍输入密码之后会在过程中出现 Your public key has been saved in 字样，找到后面跟着的文件路径，用记事本打开 id_rsa.pub，全选复制即可。\",\"💡注意：id_rsa 是你这台电脑的私人秘钥，不能给别人看，而 id_rsa.pub 是公共秘钥，无所谓。这个公钥的用处就是，当你链接GitHub自己的账户时，会你的私钥，匹配成功，才能通过git上传你的文件到GitHub上。\",\"接着便是把公钥内容放到 GitHub 上。步骤如下\",\"右上角头像 -> Settings -> 点击左边 SSH and GPG keys -> 点击 New SSH key .\",\"其中 Title 随便填写，Key 填写前面复制的 id_rsa.pub 内容。\",\"接下来在 Git Bash 中执行以下指令：\",\"ssh -T git@github.com\",\"若之前设置了密钥，要输入密码。当出现 You've successfully authenticated 字样时，就表示你已经成功了。\"]},\"44\":{\"h\":\"配置文件\",\"t\":[\"那麽好，完成以上操作后，接下来便是对于 Hexo 根目录下 _config.yml 配置文件的相关配置了。\",\"打开配置文件 _config.yml ，划到代码最后，修改 deploy 的内容。\",\"deploy: type: git repository: SSH branch: main\",\"其中 repository: SSH 部分的 SSH 便是创建初始公开仓库时的那个，形式如下：git@github.com:userName/userName.github.io.git。\",\"好，那么好，我们已经快成功了，接下来便是 Hexo 三连\",\"hexo clean hexo g hexo d\",\"接下来，打开 Github 的博客仓库，便会看到文件已经上传成功，此时打开 https://userName.github.io 便可以看到 Hexo 博客了。\",\"这里我建议到 Hexo官方 去查看相关文档，那里讲的很详细了。\",\"主题的内容我以后在写吧，这里埋下一个大坑🕳️👀\",\"但是后面自动部署大家还是要看的\",\"这里我们使用Github Action来完成自动部署。下面是详细步骤。\"]},\"45\":{\"h\":\"创建 Token\",\"t\":[\"首先要创建 token ,点击这里跳转。\",\"创建的 token 名称(Note) 随意，有效期(Expiration) 随便，这里我选择(No expiration)，节省以后调整的麻烦。勾选 repo 项 和 workflows 项。点击Generate token创建即可。\",\"！注意，要记录下来生成的token，一旦忘记，就只能重新配置了。\"]},\"46\":{\"h\":\"创建私有仓库\",\"t\":[\"创建完 token 后，我们接着创建用来存放博客源码的私有仓库。Repository name 随便，这里以 BlogScoure 为例，属性为 Private.\"]},\"47\":{\"h\":\"配置 Github Action\",\"t\":[\"接下来便是对于Github Action 的配置\",\"在博客根目录下 .github 文件下创建 workflows 文件夹，再 workflows 内创建 deploy.yml 文件，用于配置自动部署指令。在 deploy.yml 里面输入如下代码。\",\"name: 自动部署 on: push: branches: - main release: types: - published jobs: deploy: runs-on: ubuntu-latest steps: - name: 检查分支 uses: actions/checkout@v2 with: ref: main - name: 安装 Node uses: actions/setup-node@v1 with: node-version: \\\"16.x\\\" - name: 安装 Hexo run: | export TZ='Asia/Shanghai' npm install hexo-cli -g - name: 缓存 Hexo id: cache-npm uses: actions/cache@v3 env: cache-name: cache-node-modules with: path: node_modules key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }} restore-keys: | ${{ runner.os }}-build-${{ env.cache-name }}- ${{ runner.os }}-build- ${{ runner.os }}- - name: 安装依赖 if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }} run: | npm install --save - name: 生成静态文件 run: | hexo clean hexo generate - name: 部署到Github uses: JamesIves/github-pages-deploy-action@v4 with: token: repository-name: branch: main folder: public commit-message: \\\"${{ github.event.head_commit.message }}\\\"\",\"接着要填写yml文件最后一部分 部署到Github 中的内容， token 为第一步中创建的那个，repository-name 为博客仓库 Noachlu/Noachlu.github.io (填写自己的)。\",\"代码部分完成后，要保护密钥安全性，我们可以打开创建的私有仓库BlogScoure ，点击Settings-> Secrets and variables -> Actions -> New repository secret ，名称随便，但要全部大写字母和 _ 字符。内容填写第一步创建的 token ，然后 Add Secret 即可。\"]},\"48\":{\"h\":\"重新设置远程仓库和分支\"},\"49\":{\"h\":\"删除 .git\",\"t\":[\"首先删除 博客根目录/themes/xxxx/.git ，删除 .git 文件夹，要注意该文件夹是隐藏的。\",\"之后在根目录运行以下指令\",\"git init git remote add origin [私有仓库的SSH] git checkout -b main\"]},\"50\":{\"h\":\"添加屏蔽项\",\"t\":[\"将指定内容不上传到 github 上。这样可以减少需要提交的文件量和加快提交速度。 在 博客根目录/.gitignore 文件中替换以下内容：\",\".DS_Store Thumbs.db db.json *.log node_modules/ public/ .deploy*/ .deploy_git*/ .idea themes/xxxx/.git\",\"最后一行 xxxx 换成自己使用的主题\"]},\"51\":{\"h\":\"提交到Github\",\"t\":[\"git add . git commit -m \\\"First update\\\" git push origin main\",\"以后都使用这三个代码进行提交，其中 First update 按照自己情况进行修改。\",\"若嫌麻烦，可以在博客根目录下创建 push.bat 脚本，在里面输入以下内容：\",\"@echo off git add . git commit -m \\\"First update\\\" git push origin main pause\",\"使用时双击脚本即可自动执行命令。\"]},\"52\":{\"h\":\"查看部署情况\",\"t\":[\"打开私有仓库，点击 Action -> 刚刚提交的commit -> deploy ，查看情况。若全是√，则部署成功。\"]},\"53\":{\"h\":\"贪吃蛇代码\",\"t\":[\"C 语言 和 Java 版 贪吃蛇代码\"]},\"54\":{\"h\":\"SSM框架知识\",\"t\":[\"对于该目录下面的 md 文章的描述，或者一下其它信息\",\"可以用 <Catalog /> 来显示下面有的文章的标题目录\"]},\"55\":{\"h\":\"MyBatis 笔记\"},\"56\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"57\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\",\"请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果\"]},\"58\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"59\":{\"h\":\"Spring 笔记\"},\"60\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"61\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"62\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"63\":{\"h\":\"SpringBoot 笔记\",\"t\":[\"一个被数字 10 星标了的香蕉文章。\"]},\"64\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"65\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"66\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"67\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"星标了的香蕉文章\",{\"1\":{\"63\":1}}],[\"请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果请复制这段文字粘贴到任意地点查看效果\",{\"1\":{\"57\":1}}],[\"版\",{\"1\":{\"53\":1}}],[\"语言\",{\"1\":{\"53\":1}}],[\"贪吃蛇代码\",{\"0\":{\"53\":1},\"1\":{\"53\":1}}],[\"则部署成功\",{\"1\":{\"52\":1}}],[\"则是无密码\",{\"1\":{\"43\":1}}],[\"查看情况\",{\"1\":{\"52\":1}}],[\"查看部署情况\",{\"0\":{\"52\":1}}],[\"刚刚提交的commit\",{\"1\":{\"52\":1}}],[\"脚本\",{\"1\":{\"51\":1}}],[\"按照自己情况进行修改\",{\"1\":{\"51\":1}}],[\"以后都使用这三个代码进行提交\",{\"1\":{\"51\":1}}],[\"提交到github\",{\"0\":{\"51\":1}}],[\"提取文件名\",{\"0\":{\"31\":1}}],[\"换成自己使用的主题\",{\"1\":{\"50\":1}}],[\"最后一行\",{\"1\":{\"50\":1}}],[\"最新的编程技术\",{\"1\":{\"0\":1}}],[\"将指定内容不上传到\",{\"1\":{\"50\":1}}],[\"将处理后的内容写入新文件\",{\"1\":{\"32\":1}}],[\"私有仓库的ssh\",{\"1\":{\"49\":1}}],[\"博客根目录\",{\"1\":{\"49\":1,\"50\":1}}],[\"博客了\",{\"1\":{\"44\":1}}],[\"删除\",{\"0\":{\"49\":1},\"1\":{\"49\":1}}],[\"重新设置远程仓库和分支\",{\"0\":{\"48\":1}}],[\"字符\",{\"1\":{\"47\":1}}],[\"字样时\",{\"1\":{\"43\":1}}],[\"字样\",{\"1\":{\"43\":1}}],[\"代码部分完成后\",{\"1\":{\"47\":1}}],[\"为博客仓库\",{\"1\":{\"47\":1}}],[\"为第一步中创建的那个\",{\"1\":{\"47\":1}}],[\"为例\",{\"1\":{\"34\":1,\"46\":1}}],[\"中的内容\",{\"1\":{\"47\":1}}],[\"中执行以下指令\",{\"1\":{\"43\":1}}],[\"中执行以下两条命令配置你的用户名和邮箱\",{\"1\":{\"42\":1}}],[\"部署到github\",{\"1\":{\"47\":2}}],[\"部分的\",{\"1\":{\"44\":1}}],[\"缓存\",{\"1\":{\"47\":1}}],[\"|\",{\"1\":{\"47\":4}}],[\"检查分支\",{\"1\":{\"47\":1}}],[\"自动部署\",{\"1\":{\"47\":1}}],[\"自带的图形化界面\",{\"1\":{\"32\":1}}],[\"里面输入如下代码\",{\"1\":{\"47\":1}}],[\"内创建\",{\"1\":{\"47\":1}}],[\"内容填写第一步创建的\",{\"1\":{\"47\":1}}],[\"内容\",{\"1\":{\"43\":1}}],[\"再\",{\"1\":{\"47\":1}}],[\"后\",{\"1\":{\"46\":1}}],[\"项\",{\"1\":{\"45\":2}}],[\"勾选\",{\"1\":{\"45\":1}}],[\"节省以后调整的麻烦\",{\"1\":{\"45\":1}}],[\"有效期\",{\"1\":{\"45\":1}}],[\"随便\",{\"1\":{\"45\":1,\"46\":1}}],[\"随便填写\",{\"1\":{\"43\":1}}],[\"随意\",{\"1\":{\"45\":1}}],[\"名称随便\",{\"1\":{\"47\":1}}],[\"名称\",{\"1\":{\"45\":1}}],[\"去查看相关文档\",{\"1\":{\"44\":1}}],[\"此时打开\",{\"1\":{\"44\":1}}],[\"打开私有仓库\",{\"1\":{\"52\":1}}],[\"打开\",{\"1\":{\"44\":1}}],[\"打开配置文件\",{\"1\":{\"44\":1}}],[\"好\",{\"1\":{\"44\":1}}],[\"形式如下\",{\"1\":{\"44\":1}}],[\"修改\",{\"1\":{\"44\":1}}],[\"修改时间代码\",{\"0\":{\"32\":1}}],[\"划到代码最后\",{\"1\":{\"44\":1}}],[\"根目录下\",{\"1\":{\"44\":1}}],[\"那里讲的很详细了\",{\"1\":{\"44\":1}}],[\"那么好\",{\"1\":{\"44\":1}}],[\"那么我们开始吧\",{\"1\":{\"33\":1}}],[\"那麽好\",{\"1\":{\"44\":1}}],[\"就只能重新配置了\",{\"1\":{\"45\":1}}],[\"就表示你已经成功了\",{\"1\":{\"43\":1}}],[\"就不展开叙述了\",{\"1\":{\"38\":1}}],[\"variables\",{\"1\":{\"47\":1}}],[\"v4\",{\"1\":{\"47\":1}}],[\"v3\",{\"1\":{\"47\":1}}],[\"v1\",{\"1\":{\"47\":1}}],[\"v2\",{\"1\":{\"47\":1}}],[\"version\",{\"1\":{\"47\":1}}],[\"ve\",{\"1\":{\"43\":1}}],[\"vbox\",{\"1\":{\"32\":6}}],[\"当出现\",{\"1\":{\"43\":1}}],[\"当你链接github自己的账户时\",{\"1\":{\"43\":1}}],[\"要注意该文件夹是隐藏的\",{\"1\":{\"49\":1}}],[\"要保护密钥安全性\",{\"1\":{\"47\":1}}],[\"要保证文件夹中只有\",{\"1\":{\"30\":1}}],[\"要记录下来生成的token\",{\"1\":{\"45\":1}}],[\"要输入密码\",{\"1\":{\"43\":1}}],[\"填写自己的\",{\"1\":{\"47\":1}}],[\"填写前面复制的\",{\"1\":{\"43\":1}}],[\"填写信息\",{\"1\":{\"39\":1}}],[\"其中\",{\"1\":{\"43\":1,\"44\":1,\"51\":1}}],[\"其它系统还不清楚\",{\"1\":{\"34\":1}}],[\"步骤如下\",{\"1\":{\"43\":1}}],[\"上\",{\"1\":{\"43\":1,\"50\":1}}],[\"才能通过git上传你的文件到github上\",{\"1\":{\"43\":1}}],[\"匹配成功\",{\"1\":{\"43\":1}}],[\"会你的私钥\",{\"1\":{\"43\":1}}],[\"无所谓\",{\"1\":{\"43\":1}}],[\"无需其它安装操作\",{\"1\":{\"32\":1}}],[\"而\",{\"1\":{\"43\":1}}],[\"不能给别人看\",{\"1\":{\"43\":1}}],[\"是公共秘钥\",{\"1\":{\"43\":1}}],[\"是你这台电脑的私人秘钥\",{\"1\":{\"43\":1}}],[\"是处理后的文件夹\",{\"1\":{\"30\":1}}],[\"💡注意\",{\"1\":{\"43\":1}}],[\"👀\",{\"1\":{\"33\":1}}],[\"全选复制即可\",{\"1\":{\"43\":1}}],[\"用于配置自动部署指令\",{\"1\":{\"47\":1}}],[\"用记事本打开\",{\"1\":{\"43\":1}}],[\"用户名和邮箱保持一致\",{\"1\":{\"42\":1}}],[\"用户名\",{\"1\":{\"39\":1}}],[\"找到后面跟着的文件路径\",{\"1\":{\"43\":1}}],[\"若全是√\",{\"1\":{\"52\":1}}],[\"若嫌麻烦\",{\"1\":{\"51\":1}}],[\"若之前设置了密钥\",{\"1\":{\"43\":1}}],[\"若直接回车\",{\"1\":{\"43\":1}}],[\"若遇到啥问题时\",{\"1\":{\"38\":1}}],[\"之后在根目录运行以下指令\",{\"1\":{\"49\":1}}],[\"之后会出现让我们设置密码的情况\",{\"1\":{\"43\":1}}],[\"之前要安装\",{\"1\":{\"33\":1}}],[\"回车即可\",{\"1\":{\"43\":1}}],[\"keys\",{\"1\":{\"43\":1,\"47\":1}}],[\"key\",{\"1\":{\"43\":4,\"47\":1}}],[\"keygen\",{\"1\":{\"43\":1}}],[\"接着要填写yml文件最后一部分\",{\"1\":{\"47\":1}}],[\"接着便是把公钥内容放到\",{\"1\":{\"43\":1}}],[\"接着再输一遍密钥\",{\"1\":{\"43\":1}}],[\"接着会出现\",{\"1\":{\"43\":1}}],[\"接下来\",{\"1\":{\"44\":1}}],[\"接下来便是\",{\"1\":{\"44\":1}}],[\"接下来便是对于github\",{\"1\":{\"47\":1}}],[\"接下来便是对于\",{\"1\":{\"44\":1}}],[\"接下来便是完整的代码\",{\"1\":{\"32\":1}}],[\"接下来在\",{\"1\":{\"43\":1}}],[\"接下来指令我就都在这里执行了\",{\"1\":{\"40\":1}}],[\"依旧是在\",{\"1\":{\"43\":1}}],[\"与你的\",{\"1\":{\"42\":1}}],[\"配置文件的相关配置了\",{\"1\":{\"44\":1}}],[\"配置文件\",{\"0\":{\"44\":1}}],[\"配置密钥\",{\"0\":{\"43\":1}}],[\"配置\",{\"0\":{\"42\":1,\"47\":1}}],[\"$\",{\"1\":{\"41\":2,\"42\":2,\"43\":1,\"47\":9}}],[\"右上角头像\",{\"1\":{\"43\":1}}],[\"右上角搜索旁边的加号\",{\"1\":{\"39\":1}}],[\"右键博客根目录\",{\"1\":{\"40\":1}}],[\"相关配置\",{\"0\":{\"40\":1}}],[\"待我们创建完仓库之后\",{\"1\":{\"39\":1}}],[\"直接创建\",{\"1\":{\"39\":1}}],[\"属性为\",{\"1\":{\"46\":1}}],[\"属性\",{\"1\":{\"39\":1}}],[\"❤️‍🔥\",{\"1\":{\"39\":1}}],[\"❤️‍🔥这里只是记录了我在搭建博客时的一些经历\",{\"1\":{\"33\":1}}],[\"望谅解\",{\"1\":{\"39\":1}}],[\"也就不写了\",{\"1\":{\"39\":1}}],[\"也可以用下面的命令\",{\"1\":{\"37\":1}}],[\"没用过\",{\"1\":{\"39\":1}}],[\"但要全部大写字母和\",{\"1\":{\"47\":1}}],[\"但是后面自动部署大家还是要看的\",{\"1\":{\"44\":1}}],[\"但是有时会访问不了\",{\"1\":{\"38\":1}}],[\"但我全是用的\",{\"1\":{\"39\":1}}],[\"同样可以使用\",{\"1\":{\"39\":1}}],[\"记得复制仓库的\",{\"1\":{\"39\":1}}],[\"创建完\",{\"1\":{\"46\":1}}],[\"创建完成之后\",{\"1\":{\"39\":1}}],[\"创建私有仓库\",{\"0\":{\"46\":1}}],[\"创建的\",{\"1\":{\"45\":1}}],[\"创建\",{\"0\":{\"45\":1}}],[\"创建仓库\",{\"0\":{\"39\":1}}],[\"格式为\",{\"1\":{\"39\":1}}],[\"仓库名\",{\"1\":{\"39\":1}}],[\"update\",{\"1\":{\"51\":3}}],[\"uses\",{\"1\":{\"47\":4}}],[\"user\",{\"1\":{\"42\":2}}],[\"useremail\",{\"1\":{\"39\":1,\"42\":2,\"43\":1}}],[\"username\",{\"1\":{\"39\":2,\"42\":2,\"44\":3}}],[\"ubuntu\",{\"1\":{\"47\":1}}],[\"utf8\",{\"1\":{\"32\":12}}],[\"愣着呀\",{\"1\":{\"39\":1}}],[\"前往\",{\"1\":{\"39\":1}}],[\"前面的两个版本功能不太齐全\",{\"1\":{\"30\":1}}],[\"怎么可以没有一个仓库呢\",{\"1\":{\"39\":1}}],[\"既然要部署到\",{\"1\":{\"39\":1}}],[\"下执行指令\",{\"1\":{\"43\":1}}],[\"下面是详细步骤\",{\"1\":{\"44\":1}}],[\"下面要用到的注释放在这里了\",{\"1\":{\"39\":1}}],[\"下面我便讲一讲部署到\",{\"1\":{\"38\":1}}],[\"下载\",{\"1\":{\"34\":1}}],[\"更多常用命令可以跳转官网查看\",{\"1\":{\"38\":1}}],[\"想了解\",{\"1\":{\"38\":1}}],[\"平常修改时一般只用\",{\"1\":{\"38\":1}}],[\"发布网站\",{\"1\":{\"38\":1}}],[\"发生的发送发顺丰\",{\"1\":{\"9\":1,\"21\":1,\"26\":1}}],[\"本地预览\",{\"1\":{\"38\":1}}],[\"三连\",{\"1\":{\"38\":1,\"44\":1}}],[\"还有最常用的两个\",{\"1\":{\"38\":1}}],[\"还增加了如下功能\",{\"1\":{\"32\":1}}],[\"<title>\",{\"1\":{\"38\":1}}],[\"<name>\",{\"1\":{\"38\":1}}],[\"<catalog\",{\"1\":{\"5\":1,\"17\":1,\"54\":1}}],[\"一个被数字\",{\"1\":{\"63\":1}}],[\"一旦忘记\",{\"1\":{\"45\":1}}],[\"一般为简写\",{\"1\":{\"38\":1}}],[\"一名热爱编程和分享知识的开发者\",{\"1\":{\"2\":1}}],[\"指令\",{\"0\":{\"38\":1}}],[\"结束命令\",{\"1\":{\"37\":1}}],[\"来清理网页缓存\",{\"1\":{\"38\":1}}],[\"来查看境况\",{\"1\":{\"38\":1}}],[\"来预览博客初始样子\",{\"1\":{\"37\":1}}],[\"来显示下面有的文章的标题目录\",{\"1\":{\"5\":1,\"17\":1,\"54\":1}}],[\"生成静态文件\",{\"1\":{\"47\":1}}],[\"生成网址\",{\"1\":{\"37\":1}}],[\"生活随笔\",{\"1\":{\"0\":1}}],[\"生活和学习的地方\",{\"1\":{\"0\":1}}],[\"便会看到文件已经上传成功\",{\"1\":{\"44\":1}}],[\"便是创建初始公开仓库时的那个\",{\"1\":{\"44\":1}}],[\"便可以看到\",{\"1\":{\"44\":1}}],[\"便可以执行\",{\"1\":{\"37\":1}}],[\"便可以建造网站了\",{\"1\":{\"36\":1}}],[\"便初始化成功了\",{\"1\":{\"37\":1}}],[\"等待一段时间之后\",{\"1\":{\"37\":1}}],[\"等有空余时间时\",{\"1\":{\"33\":1}}],[\"初始化博客\",{\"1\":{\"38\":1}}],[\"初始化\",{\"1\":{\"37\":1}}],[\"然后\",{\"1\":{\"47\":1}}],[\"然后我们执行下面这两个命令\",{\"1\":{\"37\":1}}],[\"然后对该文件夹进行\",{\"1\":{\"37\":1}}],[\"然后另存为\",{\"1\":{\"31\":1}}],[\"建立博客根目录\",{\"1\":{\"37\":1}}],[\"搭建网站\",{\"0\":{\"37\":1}}],[\"🍭\",{\"1\":{\"36\":1}}],[\"完成以上操作后\",{\"1\":{\"44\":1}}],[\"完成以上工作后\",{\"1\":{\"36\":1}}],[\"完成之后\",{\"1\":{\"37\":1}}],[\"完成\",{\"1\":{\"36\":1}}],[\"参考\",{\"1\":{\"34\":1}}],[\"点击settings\",{\"1\":{\"47\":1}}],[\"点击generate\",{\"1\":{\"45\":1}}],[\"点击这里跳转\",{\"1\":{\"45\":1}}],[\"点击左边\",{\"1\":{\"43\":1}}],[\"点击\",{\"1\":{\"34\":1,\"40\":1,\"43\":1,\"52\":1}}],[\"因为这也是我第一次搭建博客\",{\"1\":{\"34\":1}}],[\"安装依赖\",{\"1\":{\"47\":1}}],[\"安装插件\",{\"0\":{\"41\":1}}],[\"安装好后\",{\"1\":{\"36\":1}}],[\"安装\",{\"0\":{\"34\":1,\"35\":1,\"36\":1},\"1\":{\"33\":1,\"47\":2}}],[\"嘻嘻\",{\"1\":{\"33\":1}}],[\"现在我就像我头像旁边的图标一样\",{\"1\":{\"33\":1}}],[\"我们可以打开创建的私有仓库blogscoure\",{\"1\":{\"47\":1}}],[\"我们接着创建用来存放博客源码的私有仓库\",{\"1\":{\"46\":1}}],[\"我们已经快成功了\",{\"1\":{\"44\":1}}],[\"我之前部署到过\",{\"1\":{\"38\":1}}],[\"我想我一定会继续完善的\",{\"1\":{\"33\":1}}],[\"我是\",{\"1\":{\"2\":1}}],[\"主题的内容我以后在写吧\",{\"1\":{\"44\":1}}],[\"主要是主题部分还没写\",{\"1\":{\"33\":1}}],[\"主界面\",{\"1\":{\"32\":1}}],[\"希望对大家有所帮助\",{\"1\":{\"33\":1}}],[\"希望通过这个博客与你一起成长和进步\",{\"1\":{\"2\":1}}],[\"可以在博客根目录下创建\",{\"1\":{\"51\":1}}],[\"可以使用\",{\"1\":{\"38\":1}}],[\"可以自己修改\",{\"1\":{\"37\":1}}],[\"可以直接新建文件夹\",{\"1\":{\"37\":1}}],[\"可以去官网下载\",{\"1\":{\"35\":1}}],[\"可以去\",{\"1\":{\"34\":1}}],[\"可以用\",{\"1\":{\"5\":1,\"17\":1,\"54\":1}}],[\"可能不够完善\",{\"1\":{\"33\":1}}],[\"head\",{\"1\":{\"47\":1}}],[\"hexo官方\",{\"1\":{\"44\":1}}],[\"hexo\",{\"0\":{\"36\":1,\"38\":1},\"1\":{\"33\":1,\"36\":2,\"37\":8,\"38\":13,\"41\":2,\"44\":6,\"47\":5}}],[\"hexo搭建过程\",{\"0\":{\"33\":1}}],[\"hit\",{\"1\":{\"47\":1}}],[\"hashfiles\",{\"1\":{\"47\":1}}],[\"has\",{\"1\":{\"43\":1}}],[\"hbox2\",{\"1\":{\"32\":5}}],[\"hbox1\",{\"1\":{\"32\":5}}],[\"https\",{\"1\":{\"3\":1,\"32\":1,\"39\":2,\"44\":1}}],[\"已完成文件数量\",{\"1\":{\"32\":2}}],[\"已处理完成\",{\"1\":{\"32\":3}}],[\"开始处理\",{\"1\":{\"32\":1}}],[\"开发工具和项目经验\",{\"1\":{\"0\":1}}],[\"选择输出文件夹\",{\"1\":{\"32\":2}}],[\"选择输入文件夹\",{\"1\":{\"32\":2}}],[\"界面\",{\"1\":{\"32\":1}}],[\"qmessagebox\",{\"1\":{\"32\":1}}],[\"qfiledialog\",{\"1\":{\"32\":3}}],[\"qlineedit\",{\"1\":{\"32\":3}}],[\"qlabel\",{\"1\":{\"32\":4}}],[\"qpushbutton\",{\"1\":{\"32\":4}}],[\"qhboxlayout\",{\"1\":{\"32\":3}}],[\"qvboxlayout\",{\"1\":{\"32\":2}}],[\"qwidget\",{\"1\":{\"32\":2}}],[\"qapplication\",{\"1\":{\"32\":2}}],[\"qtwidgets\",{\"1\":{\"32\":1}}],[\"qtgui\",{\"1\":{\"32\":1}}],[\"qicon\",{\"1\":{\"32\":1}}],[\"框架\",{\"1\":{\"32\":1}}],[\"框架专栏\",{\"0\":{\"16\":1}}],[\"首先删除\",{\"1\":{\"49\":1}}],[\"首先要创建\",{\"1\":{\"45\":1}}],[\"首先要先安装\",{\"1\":{\"32\":1}}],[\"首先我们要选择一个自己喜欢的位置\",{\"1\":{\"37\":1}}],[\"首先在\",{\"1\":{\"31\":1}}],[\"显示处理完成的文件数\",{\"1\":{\"32\":1}}],[\"添加屏蔽项\",{\"0\":{\"50\":1}}],[\"添加计数标签到布局\",{\"1\":{\"32\":1}}],[\"添加计数标签到布局中\",{\"1\":{\"32\":1}}],[\"添加了如下功能\",{\"1\":{\"32\":1}}],[\"使用时双击脚本即可自动执行命令\",{\"1\":{\"51\":1}}],[\"使用\",{\"1\":{\"36\":1}}],[\"使用如下命令\",{\"1\":{\"32\":1}}],[\"使用的是\",{\"1\":{\"32\":1}}],[\"使界面更加清除\",{\"1\":{\"32\":1}}],[\"进行了美化\",{\"1\":{\"32\":1}}],[\"于是使用了\",{\"1\":{\"32\":1}}],[\"升级版\",{\"1\":{\"32\":1}}],[\"个人感觉\",{\"1\":{\"32\":1}}],[\"对处理界面进行了美化\",{\"1\":{\"32\":1}}],[\"对于该目录下面的\",{\"1\":{\"5\":1,\"17\":1,\"54\":1}}],[\"输出文件夹路径\",{\"1\":{\"32\":2}}],[\"输入文件夹路径\",{\"1\":{\"32\":2}}],[\"输入下面代码\",{\"1\":{\"31\":1}}],[\"浏览\",{\"1\":{\"32\":2}}],[\"图形界面\",{\"1\":{\"32\":1}}],[\"处理文件\",{\"1\":{\"32\":1}}],[\"处理完成\",{\"1\":{\"32\":2}}],[\"处理汽车车载u盘音乐歌词显示问题\",{\"1\":{\"30\":1}}],[\"先替换时间戳\",{\"1\":{\"32\":1}}],[\"^\",{\"1\":{\"32\":2}}],[\"0\",{\"1\":{\"32\":8}}],[\"00\",{\"1\":{\"32\":15}}],[\"generate\",{\"1\":{\"47\":1}}],[\"getexistingdirectory\",{\"1\":{\"32\":2}}],[\"get\",{\"1\":{\"32\":2}}],[\"gpg\",{\"1\":{\"43\":1}}],[\"global\",{\"1\":{\"42\":2}}],[\"g\",{\"1\":{\"36\":1,\"37\":1,\"38\":2,\"44\":1,\"47\":1}}],[\"gitignore\",{\"1\":{\"50\":1}}],[\"git去官网下载\",{\"1\":{\"34\":1}}],[\"git\",{\"0\":{\"34\":1,\"42\":1,\"49\":1},\"1\":{\"33\":1,\"40\":1,\"41\":1,\"42\":3,\"43\":3,\"44\":3,\"49\":5,\"50\":2,\"51\":6}}],[\"github\",{\"0\":{\"47\":1},\"1\":{\"3\":2,\"34\":1,\"38\":1,\"39\":3,\"42\":1,\"43\":2,\"44\":4,\"47\":4,\"50\":1}}],[\"grid\",{\"1\":{\"32\":7}}],[\"group\",{\"1\":{\"32\":2}}],[\"xxxx\",{\"1\":{\"49\":1,\"50\":2}}],[\"x\",{\"1\":{\"32\":4,\"47\":1}}],[\"功能汇总\",{\"1\":{\"32\":1}}],[\"功能\",{\"1\":{\"32\":2}}],[\"只处理文件夹中后缀为\",{\"1\":{\"32\":1}}],[\"只需修改代码中处理文件前后的两个\",{\"1\":{\"32\":1}}],[\"拿来即用\",{\"1\":{\"32\":1}}],[\"所有文件已处理完成\",{\"1\":{\"32\":3}}],[\"runner\",{\"1\":{\"47\":4}}],[\"run\",{\"1\":{\"47\":3}}],[\"runs\",{\"1\":{\"47\":1}}],[\"rsa\",{\"1\":{\"43\":5}}],[\"row=2\",{\"1\":{\"32\":1}}],[\"row=1\",{\"1\":{\"32\":3}}],[\"row=0\",{\"1\":{\"32\":3}}],[\"root\",{\"1\":{\"32\":11}}],[\"remote\",{\"1\":{\"49\":1}}],[\"restore\",{\"1\":{\"47\":1}}],[\"ref\",{\"1\":{\"47\":1}}],[\"release\",{\"1\":{\"47\":1}}],[\"repo\",{\"1\":{\"45\":1}}],[\"repository\",{\"1\":{\"39\":3,\"44\":2,\"46\":1,\"47\":3}}],[\"replacetimestamps\",{\"1\":{\"32\":2}}],[\"replace\",{\"1\":{\"32\":2}}],[\"read\",{\"1\":{\"32\":2}}],[\"re\",{\"1\":{\"32\":6}}],[\"return\",{\"1\":{\"32\":8}}],[\"r\",{\"1\":{\"32\":11}}],[\"16\",{\"1\":{\"47\":1}}],[\"1\",{\"1\":{\"32\":11}}],[\"10\",{\"1\":{\"32\":8,\"63\":1}}],[\"thumbs\",{\"1\":{\"50\":1}}],[\"themes\",{\"1\":{\"49\":1,\"50\":1}}],[\"the\",{\"1\":{\"43\":1}}],[\"tz=\",{\"1\":{\"47\":1}}],[\"types\",{\"1\":{\"47\":1}}],[\"type\",{\"1\":{\"44\":1}}],[\"token创建即可\",{\"1\":{\"45\":1}}],[\"token\",{\"0\":{\"45\":1},\"1\":{\"45\":2,\"46\":1,\"47\":3}}],[\"to\",{\"1\":{\"43\":1}}],[\"t\",{\"1\":{\"43\":2}}],[\"true\",{\"1\":{\"32\":1,\"47\":1}}],[\"title\",{\"1\":{\"32\":1,\"38\":1,\"43\":1}}],[\"timestamps\",{\"1\":{\"32\":2}}],[\"timecode\",{\"1\":{\"32\":4}}],[\"text=\",{\"1\":{\"32\":5}}],[\"text\",{\"1\":{\"32\":10}}],[\"tk\",{\"1\":{\"32\":12}}],[\"tkinter\",{\"1\":{\"32\":3}}],[\"txt\",{\"1\":{\"31\":2}}],[\"两个变量即可\",{\"1\":{\"32\":1}}],[\"和邮箱\",{\"1\":{\"42\":1}}],[\"和\",{\"1\":{\"32\":1,\"45\":1,\"53\":1}}],[\"和更改\",{\"1\":{\"32\":1}}],[\"该版本只要修改\",{\"1\":{\"32\":1}}],[\"push\",{\"1\":{\"47\":1,\"51\":3}}],[\"published\",{\"1\":{\"47\":1}}],[\"public\",{\"1\":{\"39\":1,\"43\":1,\"47\":1,\"50\":1}}],[\"pub\",{\"1\":{\"43\":3}}],[\"pip\",{\"1\":{\"32\":1}}],[\"pypi\",{\"1\":{\"32\":1}}],[\"pyqt5\",{\"1\":{\"32\":5}}],[\"python\",{\"1\":{\"32\":1}}],[\"private\",{\"1\":{\"46\":1}}],[\"print\",{\"1\":{\"32\":5}}],[\"processfiles\",{\"1\":{\"32\":2}}],[\"process\",{\"1\":{\"32\":8}}],[\"pause\",{\"1\":{\"51\":1}}],[\"package\",{\"1\":{\"47\":1}}],[\"pages\",{\"1\":{\"47\":1}}],[\"page\",{\"1\":{\"38\":1}}],[\"pady=5\",{\"1\":{\"32\":7}}],[\"padx=5\",{\"1\":{\"32\":7}}],[\"path\",{\"1\":{\"32\":70,\"47\":1}}],[\"passphrase\",{\"1\":{\"43\":2}}],[\"pass\",{\"1\":{\"32\":4}}],[\"workflows\",{\"1\":{\"45\":1,\"47\":2}}],[\"which\",{\"1\":{\"43\":1}}],[\"windows\",{\"1\":{\"34\":1}}],[\"width=50\",{\"1\":{\"32\":2}}],[\"with\",{\"1\":{\"32\":12,\"47\":4}}],[\"write\",{\"1\":{\"32\":6}}],[\"w\",{\"1\":{\"32\":6}}],[\"jamesives\",{\"1\":{\"47\":1}}],[\"java\",{\"1\":{\"53\":1}}],[\"javase\",{\"0\":{\"6\":1,\"18\":1}}],[\"java知识\",{\"0\":{\"5\":1,\"17\":1}}],[\"jobs\",{\"1\":{\"47\":1}}],[\"join\",{\"1\":{\"32\":11}}],[\"json\",{\"1\":{\"47\":1,\"50\":1}}],[\"js\",{\"0\":{\"35\":1},\"1\":{\"33\":1}}],[\"ssm框架知识\",{\"0\":{\"54\":1}}],[\"ssh\",{\"1\":{\"39\":2,\"43\":4,\"44\":3}}],[\"shanghai\",{\"1\":{\"47\":1}}],[\"show\",{\"1\":{\"32\":1}}],[\"showinfo\",{\"1\":{\"32\":1}}],[\"saved\",{\"1\":{\"43\":1}}],[\"save\",{\"1\":{\"41\":2,\"43\":1,\"47\":1}}],[\"s\",{\"1\":{\"37\":1,\"38\":2}}],[\"sys\",{\"1\":{\"32\":3}}],[\"secret\",{\"1\":{\"47\":2}}],[\"secrets\",{\"1\":{\"47\":1}}],[\"server\",{\"1\":{\"41\":1}}],[\"setup\",{\"1\":{\"47\":1}}],[\"settings\",{\"1\":{\"43\":1}}],[\"settext\",{\"1\":{\"32\":4}}],[\"setdisabled\",{\"1\":{\"32\":1}}],[\"setwindowtitle\",{\"1\":{\"32\":1}}],[\"setlayout\",{\"1\":{\"32\":1}}],[\"selectoutputfolder\",{\"1\":{\"32\":2}}],[\"selectinputfolder\",{\"1\":{\"32\":2}}],[\"select\",{\"1\":{\"32\":6}}],[\"self\",{\"1\":{\"32\":45}}],[\"successfully\",{\"1\":{\"43\":1}}],[\"super\",{\"1\":{\"32\":1}}],[\"sub\",{\"1\":{\"32\":4}}],[\"simple\",{\"1\":{\"32\":1}}],[\"store\",{\"1\":{\"50\":1}}],[\"steps\",{\"1\":{\"47\":2}}],[\"str\",{\"1\":{\"32\":2}}],[\"strip\",{\"1\":{\"32\":4}}],[\"start\",{\"1\":{\"32\":12}}],[\"springboot\",{\"0\":{\"63\":1}}],[\"spring\",{\"0\":{\"23\":1,\"59\":1}}],[\"first\",{\"1\":{\"51\":3}}],[\"fileprocessor\",{\"1\":{\"32\":2}}],[\"files\",{\"1\":{\"32\":2}}],[\"filedialog\",{\"1\":{\"32\":3}}],[\"file\",{\"1\":{\"32\":55,\"43\":1}}],[\"filename\",{\"1\":{\"32\":20}}],[\"from\",{\"1\":{\"32\":3}}],[\"found\",{\"1\":{\"67\":1}}],[\"folder\",{\"1\":{\"32\":51,\"47\":1}}],[\"format\",{\"1\":{\"32\":4}}],[\"for\",{\"1\":{\"32\":12,\"43\":1}}],[\"echo\",{\"1\":{\"51\":1}}],[\"event\",{\"1\":{\"47\":1}}],[\"empty\",{\"1\":{\"43\":1}}],[\"email\",{\"1\":{\"42\":1}}],[\"export\",{\"1\":{\"47\":1}}],[\"expiration\",{\"1\":{\"45\":2}}],[\"exec\",{\"1\":{\"32\":1}}],[\"exit\",{\"1\":{\"32\":1}}],[\"ex\",{\"1\":{\"32\":1}}],[\"env\",{\"1\":{\"47\":3}}],[\"enter\",{\"1\":{\"43\":2}}],[\"entry\",{\"1\":{\"32\":20}}],[\"end\",{\"1\":{\"32\":2}}],[\"endswith\",{\"1\":{\"32\":2}}],[\"enumerate\",{\"1\":{\"32\":3}}],[\"encoding=\",{\"1\":{\"32\":12}}],[\"else\",{\"1\":{\"32\":7}}],[\"桌面\",{\"1\":{\"32\":4}}],[\"读取文件\",{\"1\":{\"32\":1}}],[\"yml\",{\"1\":{\"44\":2,\"47\":2}}],[\"you\",{\"1\":{\"43\":1}}],[\"your\",{\"1\":{\"43\":1}}],[\"y\",{\"1\":{\"32\":1}}],[\"netlify\",{\"1\":{\"38\":1}}],[\"new\",{\"1\":{\"38\":2,\"39\":1,\"43\":1,\"47\":1}}],[\"npm\",{\"1\":{\"36\":2,\"41\":2,\"47\":4}}],[\"not\",{\"1\":{\"67\":1}}],[\"note\",{\"1\":{\"45\":1}}],[\"no\",{\"1\":{\"43\":1,\"45\":1}}],[\"node\",{\"0\":{\"35\":1},\"1\":{\"33\":1,\"47\":5,\"50\":1}}],[\"noachlu\",{\"1\":{\"2\":1,\"3\":2,\"47\":2}}],[\"name\",{\"1\":{\"32\":1,\"39\":1,\"42\":1,\"46\":1,\"47\":13}}],[\"n\",{\"1\":{\"32\":5}}],[\"actions\",{\"1\":{\"47\":4}}],[\"action\",{\"0\":{\"47\":1},\"1\":{\"47\":2,\"52\":1}}],[\"action来完成自动部署\",{\"1\":{\"44\":1}}],[\"authenticated\",{\"1\":{\"43\":1}}],[\"argv\",{\"1\":{\"32\":1}}],[\"app\",{\"1\":{\"32\":2}}],[\"append\",{\"1\":{\"32\":4}}],[\"add\",{\"1\":{\"47\":1,\"49\":1,\"51\":2}}],[\"addlayout\",{\"1\":{\"32\":2}}],[\"addwidget\",{\"1\":{\"32\":8}}],[\"asia\",{\"1\":{\"47\":1}}],[\"askdirectory\",{\"1\":{\"32\":2}}],[\"as\",{\"1\":{\"32\":13}}],[\"a\",{\"1\":{\"32\":1}}],[\"and\",{\"1\":{\"32\":10,\"43\":1,\"47\":1}}],[\"+=\",{\"1\":{\"32\":1}}],[\"+\",{\"1\":{\"32\":8,\"37\":1}}],[\"==\",{\"1\":{\"32\":1}}],[\"=\",{\"1\":{\"32\":74,\"47\":1}}],[\"9\",{\"1\":{\"32\":8}}],[\"idea\",{\"1\":{\"50\":1}}],[\"id\",{\"1\":{\"43\":4,\"47\":1}}],[\"io\",{\"1\":{\"39\":1,\"44\":2,\"47\":1}}],[\"initui\",{\"1\":{\"32\":2}}],[\"init\",{\"1\":{\"32\":2,\"37\":1,\"38\":1,\"49\":1}}],[\"install\",{\"1\":{\"32\":1,\"36\":1,\"41\":2,\"47\":2}}],[\"insert\",{\"1\":{\"32\":2}}],[\"index\",{\"1\":{\"32\":12}}],[\"in\",{\"1\":{\"32\":17,\"43\":2}}],[\"input\",{\"1\":{\"32\":36}}],[\"i\",{\"1\":{\"32\":8}}],[\"isdigit\",{\"1\":{\"32\":4}}],[\"if\",{\"1\":{\"32\":15,\"47\":1}}],[\"import\",{\"1\":{\"32\":11}}],[\"log\",{\"1\":{\"50\":1}}],[\"lock\",{\"1\":{\"47\":1}}],[\"localhost\",{\"1\":{\"37\":1}}],[\"latest\",{\"1\":{\"47\":1}}],[\"label\",{\"1\":{\"32\":9}}],[\"lambda\",{\"1\":{\"32\":2}}],[\"listdir\",{\"1\":{\"32\":3}}],[\"lines\",{\"1\":{\"32\":32}}],[\"line\",{\"1\":{\"32\":66}}],[\"len\",{\"1\":{\"32\":4}}],[\"lrc\",{\"1\":{\"30\":1,\"32\":4}}],[\"cache\",{\"1\":{\"47\":8}}],[\"create\",{\"1\":{\"39\":1}}],[\"c\",{\"1\":{\"37\":1,\"43\":1,\"53\":1}}],[\"ctrl\",{\"1\":{\"37\":1}}],[\"cd\",{\"1\":{\"37\":1}}],[\"clean\",{\"1\":{\"38\":3,\"44\":1,\"47\":1}}],[\"cli\",{\"1\":{\"36\":1,\"47\":1}}],[\"clicked\",{\"1\":{\"32\":3}}],[\"class\",{\"1\":{\"32\":1}}],[\"config\",{\"1\":{\"42\":2,\"44\":2}}],[\"connect\",{\"1\":{\"32\":3}}],[\"count\",{\"1\":{\"32\":6}}],[\"column=2\",{\"1\":{\"32\":2}}],[\"column=1\",{\"1\":{\"32\":3}}],[\"column=0\",{\"1\":{\"32\":2}}],[\"commit\",{\"1\":{\"47\":2,\"51\":2}}],[\"command=process\",{\"1\":{\"32\":1}}],[\"command=browse\",{\"1\":{\"32\":2}}],[\"com\",{\"1\":{\"3\":2,\"32\":1,\"43\":1,\"44\":1}}],[\"checkout\",{\"1\":{\"47\":1,\"49\":1}}],[\"checkanddeletedigit\",{\"1\":{\"32\":2}}],[\"check\",{\"1\":{\"32\":6}}],[\"db\",{\"1\":{\"50\":2}}],[\"ds\",{\"1\":{\"50\":1}}],[\"douban\",{\"1\":{\"32\":1}}],[\"d+\",{\"1\":{\"32\":2}}],[\"d\",{\"1\":{\"32\":10,\"38\":1,\"44\":1}}],[\"digit\",{\"1\":{\"32\":6}}],[\"dir\",{\"1\":{\"31\":1}}],[\"deploy\",{\"1\":{\"44\":2,\"47\":4,\"50\":2,\"52\":1}}],[\"deployer\",{\"1\":{\"41\":1}}],[\"destroy\",{\"1\":{\"32\":1}}],[\"deletetimecode\",{\"1\":{\"32\":2}}],[\"delete\",{\"1\":{\"32\":12}}],[\"def\",{\"1\":{\"32\":17}}],[\"off\",{\"1\":{\"51\":1}}],[\"origin\",{\"1\":{\"49\":1,\"51\":2}}],[\"on\",{\"1\":{\"47\":2}}],[\"open\",{\"1\":{\"32\":12}}],[\"outputs\",{\"1\":{\"47\":1}}],[\"output\",{\"1\":{\"32\":65}}],[\"outlook\",{\"1\":{\"3\":1}}],[\"os\",{\"1\":{\"32\":14,\"47\":4}}],[\"即可打开终端\",{\"1\":{\"36\":1}}],[\"即可\",{\"1\":{\"32\":1,\"39\":1,\"47\":1}}],[\"歌曲名\",{\"1\":{\"32\":2}}],[\"的配置\",{\"1\":{\"47\":1}}],[\"的博客仓库\",{\"1\":{\"44\":1}}],[\"的内容\",{\"1\":{\"44\":1}}],[\"的过程吧\",{\"1\":{\"38\":1}}],[\"的安装\",{\"1\":{\"36\":1}}],[\"的界面太过模糊\",{\"1\":{\"32\":1}}],[\"的文件\",{\"1\":{\"32\":1}}],[\"的\",{\"1\":{\"32\":1}}],[\"第9行\",{\"1\":{\"32\":1}}],[\"build\",{\"1\":{\"47\":3}}],[\"button\",{\"1\":{\"32\":20}}],[\"been\",{\"1\":{\"43\":1}}],[\"bash\",{\"1\":{\"40\":1,\"42\":1,\"43\":2}}],[\"bat\",{\"1\":{\"31\":1,\"51\":1}}],[\"blogscoure\",{\"1\":{\"46\":1}}],[\"blog\",{\"1\":{\"37\":4}}],[\"branches\",{\"1\":{\"47\":1}}],[\"branch\",{\"1\":{\"44\":1,\"47\":1}}],[\"browse\",{\"1\":{\"32\":6}}],[\"break\",{\"1\":{\"32\":3}}],[\"b\",{\"1\":{\"31\":1,\"49\":1}}],[\"新建一个公开仓库\",{\"1\":{\"39\":1}}],[\"新建文件夹\",{\"1\":{\"38\":1}}],[\"新建\",{\"1\":{\"31\":1,\"38\":1}}],[\"如果没有\",{\"1\":{\"39\":1}}],[\"如果网速不好\",{\"1\":{\"34\":1}}],[\"如果想体验完整版可以直接跳转到最后两个版本\",{\"1\":{\"30\":1}}],[\"如果你对我的博客内容有任何意见或建议\",{\"1\":{\"3\":1}}],[\"文件中替换以下内容\",{\"1\":{\"50\":1}}],[\"文件下创建\",{\"1\":{\"47\":1}}],[\"文件处理工具\",{\"1\":{\"32\":1}}],[\"文件处理程序\",{\"1\":{\"32\":1}}],[\"文件处理完成\",{\"1\":{\"32\":1}}],[\"文件名\",{\"1\":{\"32\":1}}],[\"文件夹\",{\"1\":{\"47\":1,\"49\":1}}],[\"文件夹路径\",{\"1\":{\"32\":1}}],[\"文件夹中\",{\"1\":{\"31\":1}}],[\"文件是处理前的文件夹\",{\"1\":{\"30\":1}}],[\"文件\",{\"1\":{\"30\":1,\"32\":3,\"47\":1}}],[\"文章的描述\",{\"1\":{\"5\":1,\"17\":1,\"54\":1}}],[\"文章\",{\"0\":{\"4\":1}}],[\"注意\",{\"1\":{\"45\":1}}],[\"注意第二遍输入密码之后会在过程中出现\",{\"1\":{\"43\":1}}],[\"注意提示信息即可\",{\"1\":{\"37\":1}}],[\"注册邮箱\",{\"1\":{\"39\":1}}],[\"注册干嘛\",{\"1\":{\"39\":1}}],[\"注\",{\"1\":{\"30\":1}}],[\"音乐时间戳修改\",{\"0\":{\"30\":1}}],[\"日常随笔\",{\"0\":{\"29\":1}}],[\"日常生活中的点滴记录和思考\",{\"1\":{\"0\":1}}],[\"面经\",{\"0\":{\"18\":1,\"23\":1}}],[\"mybatis\",{\"0\":{\"55\":1}}],[\"mysql\",{\"0\":{\"12\":1}}],[\"m\",{\"1\":{\"51\":2}}],[\"message\",{\"1\":{\"47\":2}}],[\"messagebox\",{\"1\":{\"32\":2}}],[\"modules\",{\"1\":{\"47\":2,\"50\":1}}],[\"modified\",{\"1\":{\"32\":4}}],[\"mkdir\",{\"1\":{\"37\":1}}],[\"main\",{\"1\":{\"32\":1,\"44\":1,\"47\":3,\"49\":1,\"51\":2}}],[\"mainloop\",{\"1\":{\"32\":1}}],[\"music\",{\"1\":{\"31\":2}}],[\"music2\",{\"1\":{\"30\":1,\"32\":2}}],[\"music1\",{\"1\":{\"30\":1,\"31\":1,\"32\":2}}],[\"md文件\",{\"1\":{\"38\":1}}],[\"md\",{\"1\":{\"5\":1,\"17\":1,\"54\":1}}],[\"长\",{\"2\":{\"11\":1,\"15\":1,\"28\":1,\"58\":1,\"62\":1,\"66\":1}}],[\"弯曲的\",{\"2\":{\"11\":1,\"15\":1,\"28\":1,\"58\":1,\"62\":1,\"66\":1}}],[\"黄\",{\"2\":{\"11\":1,\"15\":1,\"28\":1,\"58\":1,\"62\":1,\"66\":1}}],[\"飞洒发生飞洒发生发生发生发射点发\",{\"1\":{\"10\":1,\"22\":1,\"27\":1}}],[\"5\",{\"0\":{\"10\":1,\"22\":1,\"27\":1}}],[\"404\",{\"1\":{\"67\":1}}],[\"4000\",{\"1\":{\"37\":1}}],[\"4\",{\"0\":{\"9\":1,\"21\":1,\"26\":1}}],[\"3\",{\"0\":{\"8\":1,\"14\":1,\"20\":1,\"25\":1,\"57\":1,\"61\":1,\"65\":1}}],[\"这样可以减少需要提交的文件量和加快提交速度\",{\"1\":{\"50\":1}}],[\"这个公钥的用处就是\",{\"1\":{\"43\":1}}],[\"这个项目\",{\"1\":{\"34\":1}}],[\"这里埋下一个大坑🕳️👀\",{\"1\":{\"44\":1}}],[\"这里我选择\",{\"1\":{\"45\":1}}],[\"这里我们使用github\",{\"1\":{\"44\":1}}],[\"这里我建议到\",{\"1\":{\"44\":1}}],[\"这里我就默认搭建注册过账号了\",{\"1\":{\"39\":1}}],[\"这里我就只记录一些我自己经常用到的一些指令\",{\"1\":{\"38\":1}}],[\"这里建议用户名\",{\"1\":{\"42\":1}}],[\"这里端口号可能会不同\",{\"1\":{\"37\":1}}],[\"这里以\",{\"1\":{\"34\":1,\"46\":1}}],[\"这里是内容\",{\"1\":{\"7\":1,\"8\":1,\"13\":1,\"14\":1,\"19\":1,\"20\":1,\"24\":1,\"25\":1,\"56\":1,\"57\":1,\"60\":1,\"61\":1,\"64\":1,\"65\":1}}],[\"这两个工具\",{\"1\":{\"33\":1}}],[\"这是一个关于技术\",{\"1\":{\"0\":1}}],[\"2\",{\"0\":{\"7\":1,\"13\":1,\"19\":1,\"24\":1,\"56\":1,\"60\":1,\"64\":1},\"1\":{\"32\":4}}],[\"标题\",{\"0\":{\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"13\":1,\"14\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"56\":1,\"57\":1,\"60\":1,\"61\":1,\"64\":1,\"65\":1}}],[\"笔记\",{\"0\":{\"6\":1,\"12\":1,\"55\":1,\"59\":1,\"63\":1}}],[\">=\",{\"1\":{\"32\":4}}],[\">list\",{\"1\":{\"31\":1}}],[\">\",{\"1\":{\"5\":1,\"17\":1,\"39\":1,\"43\":3,\"47\":3,\"52\":2,\"54\":1}}],[\"或者一下其它信息\",{\"1\":{\"5\":1,\"17\":1,\"54\":1}}],[\"期待与你在博客中交流和分享更多有趣的内容\",{\"1\":{\"3\":1}}],[\"感谢你的访问\",{\"1\":{\"3\":1}}],[\"邮箱\",{\"1\":{\"3\":1}}],[\"联系我\",{\"0\":{\"3\":1}}],[\"关于我\",{\"0\":{\"2\":1}}],[\"近期热门文章\",{\"0\":{\"1\":1}}],[\"在里面输入以下内容\",{\"1\":{\"51\":1}}],[\"在博客根目录下\",{\"1\":{\"47\":1}}],[\"在\",{\"1\":{\"42\":1,\"47\":1,\"50\":1}}],[\"在终端使用\",{\"1\":{\"37\":1}}],[\"在摸鱼中🐟\",{\"1\":{\"33\":1}}],[\"在学习过程中积累的知识和心得\",{\"1\":{\"0\":1}}],[\"在这里\",{\"1\":{\"0\":1}}],[\"学习笔记\",{\"1\":{\"0\":1}}],[\"技术分享\",{\"1\":{\"0\":1}}],[\"包括\",{\"1\":{\"0\":1}}],[\"你将发现各种有趣的内容\",{\"1\":{\"0\":1}}],[\"欢迎通过以下方式联系我\",{\"1\":{\"3\":1}}],[\"欢迎来到我的个人博客\",{\"1\":{\"0\":1}}],[\"欢迎访问\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
